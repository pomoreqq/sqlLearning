
---

## ðŸ§© **ZADANIE 4 â€“ Braki danych + agregacja**

Masz tabelÄ™: `orders`

| Kolumna        | Typ     |
| -------------- | ------- |
| `order_id`     | INTEGER |
| `customer_id`  | INTEGER |
| `order_status` | TEXT    |
| `amount`       | NUMERIC |

---

### ðŸ”§ TreÅ›Ä‡ zadania:

> Napisz zapytanie, ktÃ³re zwrÃ³ci **identyfikatory klientÃ³w (`customer_id`)**,
> ktÃ³rzy **zÅ‚oÅ¼yli co najmniej 3 zamÃ³wienia**, ale **Å¼adne z ich zamÃ³wieÅ„ nie ma statusu `'cancelled'`**.
>

>
> * **Å‚Ä…cznÄ… liczbÄ™ zamÃ³wieÅ„** (`COUNT(*)`)
> * **sumÄ™ wartoÅ›ci zamÃ³wieÅ„** (`SUM(amount)`)

---

### ðŸ“Œ Wymagania:

* uÅ¼yj `GROUP BY` + `HAVING`
* potrzebne bÄ™dzie filtrowanie po statusie (`WHERE`)
* ale musisz logicznie **wykluczyÄ‡ klientÃ³w, ktÃ³rzy majÄ… choÄ‡ jedno anulowane zamÃ³wienie**

ðŸ“Ž To nie jest `WHERE order_status != 'cancelled'`, bo wtedy moÅ¼esz **ukryÄ‡** fakt, Å¼e klient *ma* takie zamÃ³wienie.

---

ðŸ§  PodpowiedÅº (jeÅ›li potrzebna):
Prawdopodobnie przyda Ci siÄ™ **`GROUP BY customer_id`**, a potem w `HAVING` warunki typu:

* liczba wszystkich zamÃ³wieÅ„ = `COUNT(*)`
* liczba anulowanych = `SUM(CASE WHEN ... THEN 1 ELSE 0 END)`

---

SELECT customer_id,
       COUNT(*) AS order_count,
       SUM(amount) AS total_value
FROM orders
WHERE order_status != 'cancelled'
GROUP BY customer_id
HAVING COUNT(*) >= 3;
